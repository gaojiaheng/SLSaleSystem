<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				         http://www.springframework.org/schema/context
				         http://www.springframework.org/schema/context/spring-context-3.0.xsd
				         http://www.springframework.org/schema/tx
				         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				         http://www.springframework.org/schema/aop 
				         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
				     
	<!-- 1.读取JDBC配置文件 -->
		<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2.JNDI获取数据源(dbcp连接池) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.connection.url}"/>
		<property name="username"  value="${jdbc.connection.username}"/>
		<property name="password"  value="${jdbc.connection.password}"/>
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<!--无用链接  -->
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<!-- sql心跳 ：保证连接池中连接是真实有效的连接 -->
		<!-- testWhileIdle testOnBorrow testOnReturn 
      	validationQuery-select 1 -->
		<!-- 开启Evict()的定时校验,循环校验 -->
		<property name="testWhileIdle" value="true"/>
		<!--定义Evict()的时间间隔,>0,开启-->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 在进行borrowObject处理时 会对拿到的连接进行校验 -false -->
		<property name="testOnBorrow" value="false"/>
		<!-- 在进行returnObject处理时，会对返回的连接进行校验-false不校验 -->
      	<property name="testOnReturn" value="false"/>
		<!-- 校验使用的sql语句，validationQuery，复杂的校验sql会影响性能 -->
      	<property name="validationQuery" value="select 1"/>
		<!-- 配置每次校验连接的数量，一般等于maxActive -->
      	<property name="numTestsPerEvictionRun" value="${maxActive}"/>
	</bean>
		<!--2.事务管理-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
		<!-- 3.myBaties SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	<!-- 4.配置AOP:事务提交方式 -->
		<!-- aspectj-autoproxy:启用自动代理模式   proxy-target-class 代理标签类 -->
	<aop:aspectj-autoproxy/>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *org.slsale.service..*(..))" id="transService"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transService"/>
	</aop:config>	 
		<!-- 定义事务管理器 txAdvice -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="hl*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- 5.mapper接口映射 mapper接口所在的包路径 spring自东查找mapper-->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="org.slsale.dao"/>
		</bean>
	<!-- redis配置 -->
	
	
</beans>